private Node head;

public LinkedList() {
    head = null;
}

public void add(int data) {
    Node newNode = new Node(data);
    if (head == null) {
        head = newNode;
    } else {
        Node current = head;
        while (current.next != null) {
            current = current.next;
        }
        current.next = newNode;
    }
}

public int get(int index) {
    Node current = head;
    int currentIndex = 0;
    while (current != null && currentIndex < index) {
        current = current.next;
        currentIndex++;
    }
    if (current == null) {
        throw new IndexOutOfBoundsException();
    }
    return current.data;
}

public void remove(int index) {
    if (index == 0) {
        head = head.next;
    } else {
        Node current = head;
        int currentIndex = 0;
        while (current != null && currentIndex < index - 1) {
            current = current.next;
            currentIndex++;
        }
        if (current == null || current.next == null) {
            throw new IndexOutOfBoundsException();
        }
        current.next = current.next.next;
    }
}

private static class Node {
    private int data;
    private Node next;

    public Node(int data) {
        this.data = data;
        this.next = null;
    }
}
